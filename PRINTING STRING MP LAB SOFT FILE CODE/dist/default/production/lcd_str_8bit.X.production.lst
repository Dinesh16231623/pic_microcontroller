

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 21 18:25:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008F                     	;# 
    99     0090                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0095                     	;# 
   107     0096                     	;# 
   108     0097                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009A                     	;# 
   112     009B                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     0105                     	;# 
   118     0107                     	;# 
   119     0108                     	;# 
   120     0109                     	;# 
   121     010C                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     0185                     	;# 
   127     0187                     	;# 
   128     0188                     	;# 
   129     0189                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0007                     _PORTC	set	7
   211     0008                     _PORTD	set	8
   212     003E                     _RC6	set	62
   213     003D                     _RC5	set	61
   214     003F                     _RC7	set	63
   215     0087                     _TRISC	set	135
   216     0088                     _TRISD	set	136
   217     0189                     _ANSELH	set	393
   218     0188                     _ANSEL	set	392
   219                           
   220                           	psect	strings
   221     0003                     __pstrings:
   222     0003                     stringtab:
   223     0003                     __stringtab:
   224     0003                     stringcode:	
   225                           ;	String table - string pointers are 1 byte each
   226                           
   227     0003                     stringdir:
   228     0003  3000               	movlw	high stringdir
   229     0004  008A               	movwf	10
   230     0005  0804               	movf	4,w
   231     0006  0A84               	incf	4,f
   232     0007  0782               	addwf	2,f
   233     0008                     __stringbase:
   234     0008  3400               	retlw	0
   235     0009                     __end_of__stringtab:
   236     0009                     STR_1:
   237     0009  3450               	retlw	80	;'P'
   238     000A  3452               	retlw	82	;'R'
   239     000B  3449               	retlw	73	;'I'
   240     000C  344E               	retlw	78	;'N'
   241     000D  3454               	retlw	84	;'T'
   242     000E  3449               	retlw	73	;'I'
   243     000F  344E               	retlw	78	;'N'
   244     0010  3447               	retlw	71	;'G'
   245     0011  3420               	retlw	32	;' '
   246     0012  3453               	retlw	83	;'S'
   247     0013  3454               	retlw	84	;'T'
   248     0014  3452               	retlw	82	;'R'
   249     0015  3449               	retlw	73	;'I'
   250     0016  344E               	retlw	78	;'N'
   251     0017  3447               	retlw	71	;'G'
   252     0018  3400               	retlw	0
   253                           
   254                           	psect	cinit
   255     07FC                     start_initialization:	
   256                           ; #config settings
   257                           
   258     07FC                     __initialization:
   259     07FC                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262     07FC                     __end_of__initialization:
   263     07FC  0183               	clrf	3
   264     07FD  120A  118A  2FD0   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	cstackCOMMON
   267     0070                     __pcstackCOMMON:
   268     0070                     ?_type:
   269     0070                     ?_on:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0070                     ?_address:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     ?_string:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0070                     ?_delay:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ?_pulse:	
   282                           ; 1 bytes @ 0x0
   283                           
   284     0070                     ?_display:	
   285                           ; 1 bytes @ 0x0
   286                           
   287     0070                     ?_main:	
   288                           ; 1 bytes @ 0x0
   289                           
   290     0070                     delay@a:	
   291                           ; 2 bytes @ 0x0
   292                           
   293                           
   294                           ; 2 bytes @ 0x0
   295     0070                     	ds	2
   296     0072                     ??_type:
   297     0072                     ??_on:	
   298                           ; 1 bytes @ 0x2
   299                           
   300     0072                     ??_address:	
   301                           ; 1 bytes @ 0x2
   302                           
   303     0072                     ??_delay:	
   304                           ; 1 bytes @ 0x2
   305                           
   306     0072                     ??_pulse:	
   307                           ; 1 bytes @ 0x2
   308                           
   309     0072                     ??_display:	
   310                           ; 1 bytes @ 0x2
   311                           
   312     0072                     type@a:	
   313                           ; 1 bytes @ 0x2
   314                           
   315     0072                     on@a:	
   316                           ; 1 bytes @ 0x2
   317                           
   318     0072                     address@a:	
   319                           ; 1 bytes @ 0x2
   320                           
   321     0072                     display@a:	
   322                           ; 1 bytes @ 0x2
   323                           
   324                           
   325                           ; 1 bytes @ 0x2
   326     0072                     	ds	1
   327     0073                     ??_string:
   328                           
   329                           ; 1 bytes @ 0x3
   330     0073                     	ds	1
   331     0074                     string@ptr:
   332                           
   333                           ; 1 bytes @ 0x4
   334     0074                     	ds	1
   335     0075                     ??_main:
   336                           
   337                           	psect	maintext
   338     07D0                     __pmaintext:	
   339                           ; 1 bytes @ 0x5
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 36 in file "lcd_str_8bit.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  2   30[None  ] int 
   352 ;; Registers used:
   353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : B00/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels required when called: 4
   365 ;; This function calls:
   366 ;;		_address
   367 ;;		_on
   368 ;;		_string
   369 ;;		_type
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375     07D0                     _main:	
   376                           ;psect for function _main
   377                           
   378     07D0                     l747:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   381                           
   382                           
   383                           ;lcd_str_8bit.c: 38:  PORTD=0X00;TRISD=0X00;
   384     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   385     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   386     07D2  0188               	clrf	8	;volatile
   387     07D3  1683               	bsf	3,5	;RP0=1, select bank1
   388     07D4  1303               	bcf	3,6	;RP1=0, select bank1
   389     07D5  0188               	clrf	8	;volatile
   390                           
   391                           ;lcd_str_8bit.c: 39:  PORTC=0X00;TRISC=0X00;
   392     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   393     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   394     07D8  0187               	clrf	7	;volatile
   395     07D9  1683               	bsf	3,5	;RP0=1, select bank1
   396     07DA  1303               	bcf	3,6	;RP1=0, select bank1
   397     07DB  0187               	clrf	7	;volatile
   398                           
   399                           ;lcd_str_8bit.c: 40:  ANSEL=0X00;ANSELH=0X00;
   400     07DC  1683               	bsf	3,5	;RP0=1, select bank3
   401     07DD  1703               	bsf	3,6	;RP1=1, select bank3
   402     07DE  0188               	clrf	8	;volatile
   403     07DF  0189               	clrf	9	;volatile
   404     07E0                     l749:
   405                           
   406                           ;lcd_str_8bit.c: 42:     type(0X38);
   407     07E0  3038               	movlw	56
   408     07E1  120A  118A  277C  120A  118A  	fcall	_type
   409     07E6                     l751:
   410                           
   411                           ;lcd_str_8bit.c: 43:     on(0X0E);
   412     07E6  300E               	movlw	14
   413     07E7  120A  118A  276F  120A  118A  	fcall	_on
   414     07EC                     l753:
   415                           
   416                           ;lcd_str_8bit.c: 44:     address(0X80);
   417     07EC  3080               	movlw	128
   418     07ED  120A  118A  2762  120A  118A  	fcall	_address
   419     07F2                     l755:
   420                           
   421                           ;lcd_str_8bit.c: 45:     string("PRINTING STRING");
   422     07F2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   423     07F3  120A  118A  27B1  120A  118A  	fcall	_string
   424     07F8                     l31:	
   425                           ;lcd_str_8bit.c: 46:     while(1);
   426                           
   427     07F8                     l32:
   428     07F8  2FF8               	goto	l31
   429     07F9  120A  118A  2800   	ljmp	start
   430     07FC                     __end_of_main:
   431                           
   432                           	psect	text1
   433     077C                     __ptext1:	
   434 ;; *************** function _type *****************
   435 ;; Defined at:
   436 ;;		line 61 in file "lcd_str_8bit.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  a               1    wreg     unsigned char 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  a               1    2[COMMON] unsigned char 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         1       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0
   453 ;;      Totals:         1       0       0       0       0
   454 ;;Total ram usage:        1 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 2
   457 ;; This function calls:
   458 ;;		_pulse
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464     077C                     _type:	
   465                           ;psect for function _type
   466                           
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _type: [wreg+status,2+status,0+pclath+cstack]
   470                           ;type@a stored from wreg
   471     077C  00F2               	movwf	type@a
   472     077D                     l721:
   473                           
   474                           ;lcd_str_8bit.c: 61: void type(char a);lcd_str_8bit.c: 62: {;lcd_str_8bit.c: 63:     RC5
      +                          =0;RC6=0;
   475     077D  1283               	bcf	3,5	;RP0=0, select bank0
   476     077E  1303               	bcf	3,6	;RP1=0, select bank0
   477     077F  1287               	bcf	7,5	;volatile
   478     0780  1307               	bcf	7,6	;volatile
   479     0781                     l723:
   480                           
   481                           ;lcd_str_8bit.c: 64:     PORTD=a;
   482     0781  0872               	movf	type@a,w
   483     0782  0088               	movwf	8	;volatile
   484     0783                     l725:
   485                           
   486                           ;lcd_str_8bit.c: 65:     pulse();
   487     0783  120A  118A  2798  120A  118A  	fcall	_pulse
   488     0788                     l46:
   489     0788  0008               	return
   490     0789                     __end_of_type:
   491                           
   492                           	psect	text2
   493     07B1                     __ptext2:	
   494 ;; *************** function _string *****************
   495 ;; Defined at:
   496 ;;		line 86 in file "lcd_str_8bit.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  ptr             1    wreg     PTR unsigned char 
   499 ;;		 -> STR_1(16), 
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  ptr             1    4[COMMON] PTR unsigned char 
   502 ;;		 -> STR_1(16), 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         1       0       0       0       0
   514 ;;      Temps:          1       0       0       0       0
   515 ;;      Totals:         2       0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 3
   519 ;; This function calls:
   520 ;;		_display
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526     07B1                     _string:	
   527                           ;psect for function _string
   528                           
   529                           
   530                           ;incstack = 0
   531                           ; Regs used in _string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           ;string@ptr stored from wreg
   533     07B1  00F4               	movwf	string@ptr
   534     07B2                     l739:
   535                           
   536                           ;lcd_str_8bit.c: 86: void string(char *ptr);lcd_str_8bit.c: 87: {;lcd_str_8bit.c: 88:   
      +                            while(*ptr)
   537     07B2  2FC3               	goto	l745
   538     07B3                     l741:
   539                           
   540                           ;lcd_str_8bit.c: 89:     display(*ptr++);
   541     07B3  0874               	movf	string@ptr,w
   542     07B4  0084               	movwf	4
   543     07B5  120A  118A  2003  120A  118A  	fcall	stringdir
   544     07BA  120A  118A  2756  120A  118A  	fcall	_display
   545     07BF                     l743:
   546     07BF  3001               	movlw	1
   547     07C0  00F3               	movwf	??_string
   548     07C1  0873               	movf	??_string,w
   549     07C2  07F4               	addwf	string@ptr,f
   550     07C3                     l745:
   551                           
   552                           ;lcd_str_8bit.c: 88:     while(*ptr)
   553     07C3  0874               	movf	string@ptr,w
   554     07C4  0084               	movwf	4
   555     07C5  120A  118A  2003  120A  118A  	fcall	stringdir
   556     07CA  3A00               	xorlw	0
   557     07CB  1D03               	skipz
   558     07CC  2FCE               	goto	u41
   559     07CD  2FCF               	goto	u40
   560     07CE                     u41:
   561     07CE  2FB3               	goto	l741
   562     07CF                     u40:
   563     07CF                     l61:
   564     07CF  0008               	return
   565     07D0                     __end_of_string:
   566                           
   567                           	psect	text3
   568     0756                     __ptext3:	
   569 ;; *************** function _display *****************
   570 ;; Defined at:
   571 ;;		line 79 in file "lcd_str_8bit.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  a               1    wreg     unsigned char 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  a               1    2[COMMON] unsigned char 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2, status,0, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         1       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0
   588 ;;      Totals:         1       0       0       0       0
   589 ;;Total ram usage:        1 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 2
   592 ;; This function calls:
   593 ;;		_pulse
   594 ;; This function is called by:
   595 ;;		_string
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599     0756                     _display:	
   600                           ;psect for function _display
   601                           
   602                           
   603                           ;incstack = 0
   604                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   605                           ;display@a stored from wreg
   606     0756  00F2               	movwf	display@a
   607     0757                     l715:
   608                           
   609                           ;lcd_str_8bit.c: 79: void display(char a);lcd_str_8bit.c: 80: {;lcd_str_8bit.c: 81:     
      +                          RC5=1;
   610     0757  1283               	bcf	3,5	;RP0=0, select bank0
   611     0758  1303               	bcf	3,6	;RP1=0, select bank0
   612     0759  1687               	bsf	7,5	;volatile
   613     075A                     l717:
   614                           
   615                           ;lcd_str_8bit.c: 82:     PORTD=a;
   616     075A  0872               	movf	display@a,w
   617     075B  0088               	movwf	8	;volatile
   618     075C                     l719:
   619                           
   620                           ;lcd_str_8bit.c: 83:     pulse();
   621     075C  120A  118A  2798  120A  118A  	fcall	_pulse
   622     0761                     l55:
   623     0761  0008               	return
   624     0762                     __end_of_display:
   625                           
   626                           	psect	text4
   627     076F                     __ptext4:	
   628 ;; *************** function _on *****************
   629 ;; Defined at:
   630 ;;		line 67 in file "lcd_str_8bit.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  a               1    wreg     unsigned char 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  a               1    2[COMMON] unsigned char 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         1       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         1       0       0       0       0
   648 ;;Total ram usage:        1 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 2
   651 ;; This function calls:
   652 ;;		_pulse
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658     076F                     _on:	
   659                           ;psect for function _on
   660                           
   661                           
   662                           ;incstack = 0
   663                           ; Regs used in _on: [wreg+status,2+status,0+pclath+cstack]
   664                           ;on@a stored from wreg
   665     076F  00F2               	movwf	on@a
   666     0770                     l727:
   667                           
   668                           ;lcd_str_8bit.c: 67: void on(char a);lcd_str_8bit.c: 68: {;lcd_str_8bit.c: 69:     RC5=0
      +                          ;RC6=0;
   669     0770  1283               	bcf	3,5	;RP0=0, select bank0
   670     0771  1303               	bcf	3,6	;RP1=0, select bank0
   671     0772  1287               	bcf	7,5	;volatile
   672     0773  1307               	bcf	7,6	;volatile
   673     0774                     l729:
   674                           
   675                           ;lcd_str_8bit.c: 70:     PORTD=a;
   676     0774  0872               	movf	on@a,w
   677     0775  0088               	movwf	8	;volatile
   678     0776                     l731:
   679                           
   680                           ;lcd_str_8bit.c: 71:     pulse();
   681     0776  120A  118A  2798  120A  118A  	fcall	_pulse
   682     077B                     l49:
   683     077B  0008               	return
   684     077C                     __end_of_on:
   685                           
   686                           	psect	text5
   687     0762                     __ptext5:	
   688 ;; *************** function _address *****************
   689 ;; Defined at:
   690 ;;		line 73 in file "lcd_str_8bit.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  a               1    wreg     unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  a               1    2[COMMON] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0
   707 ;;      Totals:         1       0       0       0       0
   708 ;;Total ram usage:        1 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 2
   711 ;; This function calls:
   712 ;;		_pulse
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718     0762                     _address:	
   719                           ;psect for function _address
   720                           
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _address: [wreg+status,2+status,0+pclath+cstack]
   724                           ;address@a stored from wreg
   725     0762  00F2               	movwf	address@a
   726     0763                     l733:
   727                           
   728                           ;lcd_str_8bit.c: 73: void address(char a);lcd_str_8bit.c: 74: {;lcd_str_8bit.c: 75:     
      +                          RC5=0;RC6=0;
   729     0763  1283               	bcf	3,5	;RP0=0, select bank0
   730     0764  1303               	bcf	3,6	;RP1=0, select bank0
   731     0765  1287               	bcf	7,5	;volatile
   732     0766  1307               	bcf	7,6	;volatile
   733     0767                     l735:
   734                           
   735                           ;lcd_str_8bit.c: 76:     PORTD=a;
   736     0767  0872               	movf	address@a,w
   737     0768  0088               	movwf	8	;volatile
   738     0769                     l737:
   739                           
   740                           ;lcd_str_8bit.c: 77:     pulse();
   741     0769  120A  118A  2798  120A  118A  	fcall	_pulse
   742     076E                     l52:
   743     076E  0008               	return
   744     076F                     __end_of_address:
   745                           
   746                           	psect	text6
   747     0798                     __ptext6:	
   748 ;; *************** function _pulse *****************
   749 ;; Defined at:
   750 ;;		line 54 in file "lcd_str_8bit.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0, pclath, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   764 ;;      Params:         0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0
   767 ;;      Totals:         0       0       0       0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels used: 1
   770 ;; Hardware stack levels required when called: 1
   771 ;; This function calls:
   772 ;;		_delay
   773 ;; This function is called by:
   774 ;;		_type
   775 ;;		_on
   776 ;;		_address
   777 ;;		_display
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781     0798                     _pulse:	
   782                           ;psect for function _pulse
   783                           
   784     0798                     l709:	
   785                           ;incstack = 0
   786                           ; Regs used in _pulse: [wreg+status,2+status,0+pclath+cstack]
   787                           
   788                           
   789                           ;lcd_str_8bit.c: 56:     RC7=1;
   790     0798  1283               	bcf	3,5	;RP0=0, select bank0
   791     0799  1303               	bcf	3,6	;RP1=0, select bank0
   792     079A  1787               	bsf	7,7	;volatile
   793     079B                     l711:
   794                           
   795                           ;lcd_str_8bit.c: 57:     delay(1000);
   796     079B  30E8               	movlw	232
   797     079C  00F0               	movwf	delay@a
   798     079D  3003               	movlw	3
   799     079E  00F1               	movwf	delay@a+1
   800     079F  120A  118A  2789  120A  118A  	fcall	_delay
   801     07A4                     l713:
   802                           
   803                           ;lcd_str_8bit.c: 58:     RC7=0;
   804     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   805     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   806     07A6  1387               	bcf	7,7	;volatile
   807                           
   808                           ;lcd_str_8bit.c: 59:     delay(1000);
   809     07A7  30E8               	movlw	232
   810     07A8  00F0               	movwf	delay@a
   811     07A9  3003               	movlw	3
   812     07AA  00F1               	movwf	delay@a+1
   813     07AB  120A  118A  2789  120A  118A  	fcall	_delay
   814     07B0                     l43:
   815     07B0  0008               	return
   816     07B1                     __end_of_pulse:
   817                           
   818                           	psect	text7
   819     0789                     __ptext7:	
   820 ;; *************** function _delay *****************
   821 ;; Defined at:
   822 ;;		line 50 in file "lcd_str_8bit.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  a               2    0[COMMON] int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         2       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0
   839 ;;      Totals:         2       0       0       0       0
   840 ;;Total ram usage:        2 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_pulse
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849     0789                     _delay:	
   850                           ;psect for function _delay
   851                           
   852     0789                     l705:	
   853                           ;incstack = 0
   854                           ; Regs used in _delay: [wreg+status,2+status,0]
   855                           
   856     0789                     l707:	
   857                           ;lcd_str_8bit.c: 50: void delay(int a);lcd_str_8bit.c: 51: {;lcd_str_8bit.c: 52:     whi
      +                          le(a--);
   858                           
   859     0789  30FF               	movlw	255
   860     078A  07F0               	addwf	delay@a,f
   861     078B  1803               	skipnc
   862     078C  0AF1               	incf	delay@a+1,f
   863     078D  30FF               	movlw	255
   864     078E  07F1               	addwf	delay@a+1,f
   865     078F  0A70               	incf	delay@a,w
   866     0790  1D03               	skipz
   867     0791  2F96               	goto	u31
   868     0792  0A71               	incf	delay@a+1,w
   869     0793  1D03               	btfss	3,2
   870     0794  2F96               	goto	u31
   871     0795  2F97               	goto	u30
   872     0796                     u31:
   873     0796  2F89               	goto	l707
   874     0797                     u30:
   875     0797                     l40:
   876     0797  0008               	return
   877     0798                     __end_of_delay:
   878     007E                     btemp	set	126	;btemp
   879     007E                     wtemp0	set	126
   880                           
   881                           	psect	idloc
   882                           
   883                           ;Config register IDLOC0 @ 0x2000
   884                           ;	unspecified, using default values
   885     2000                     	org	8192
   886     2000  3FFF               	dw	16383
   887                           
   888                           ;Config register IDLOC1 @ 0x2001
   889                           ;	unspecified, using default values
   890     2001                     	org	8193
   891     2001  3FFF               	dw	16383
   892                           
   893                           ;Config register IDLOC2 @ 0x2002
   894                           ;	unspecified, using default values
   895     2002                     	org	8194
   896     2002  3FFF               	dw	16383
   897                           
   898                           ;Config register IDLOC3 @ 0x2003
   899                           ;	unspecified, using default values
   900     2003                     	org	8195
   901     2003  3FFF               	dw	16383
   902                           
   903                           	psect	config
   904                           
   905                           ;Config register CONFIG1 @ 0x2007
   906                           ;	Oscillator Selection bits
   907                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   908                           ;	Watchdog Timer Enable bit
   909                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   910                           ;	Power-up Timer Enable bit
   911                           ;	PWRTE = ON, PWRT enabled
   912                           ;	RE3/MCLR pin function select bit
   913                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   914                           ;	Code Protection bit
   915                           ;	CP = OFF, Program memory code protection is disabled
   916                           ;	Data Code Protection bit
   917                           ;	CPD = OFF, Data memory code protection is disabled
   918                           ;	Brown Out Reset Selection bits
   919                           ;	BOREN = OFF, BOR disabled
   920                           ;	Internal External Switchover bit
   921                           ;	IESO = ON, Internal/External Switchover mode is enabled
   922                           ;	Fail-Safe Clock Monitor Enabled bit
   923                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   924                           ;	Low Voltage Programming Enable bit
   925                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   926                           ;	In-Circuit Debugger Mode bit
   927                           ;	DEBUG = 0x1, unprogrammed default
   928     2007                     	org	8199
   929     2007  2CE4               	dw	11492
   930                           
   931                           ;Config register CONFIG2 @ 0x2008
   932                           ;	Brown-out Reset Selection bit
   933                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   934                           ;	Flash Program Memory Self Write Enable bits
   935                           ;	WRT = OFF, Write protection off
   936     2008                     	org	8200
   937     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    string@ptr	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_string
    _string->_display
    _pulse->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     862
                            _address
                                 _on
                             _string
                               _type
 ---------------------------------------------------------------------------------
 (1) _type                                                 1     1      0     196
                                              2 COMMON     1     1      0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _string                                               2     2      0     274
                                              3 COMMON     2     2      0
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              1     1      0     196
                                              2 COMMON     1     1      0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _on                                                   1     1      0     196
                                              2 COMMON     1     1      0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _address                                              1     1      0     196
                                              2 COMMON     1     1      0
                              _pulse
 ---------------------------------------------------------------------------------
 (2) _pulse                                                0     0      0     174
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _address
     _pulse
       _delay
   _on
     _pulse
   _string
     _display
       _pulse
   _type
     _pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 21 18:25:25 2023

                      pc 0002                       l31 07F8                       l40 0797  
                     l32 07F8                       l43 07B0                       l52 076E  
                     l61 07CF                       l46 0788                       l55 0761  
                     l49 077B                       u30 0797                       u31 0796  
                     u40 07CF                       u41 07CE                       _on 076F  
                     fsr 0004                      ?_on 0070                      l711 079B  
                    l705 0789                      l713 07A4                      l721 077D  
                    l707 0789                      l731 0776                      l715 0757  
                    l723 0781                      l709 0798                      l733 0763  
                    l717 075A                      l741 07B3                      l725 0783  
                    l735 0767                      l727 0770                      l719 075C  
                    l743 07BF                      l751 07E6                      l737 0769  
                    l729 0774                      l745 07C3                      l753 07EC  
                    l739 07B2                      l755 07F2                      l747 07D0  
                    l749 07E0                      _RC5 003D                      _RC6 003E  
                    _RC7 003F                      fsr0 0004                      on@a 0072  
                   ??_on 0072                     STR_1 0009                     _main 07D0  
                   btemp 007E                     _type 077C                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    ?_type 0070  
        __end_of_address 076F                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088          __end_of_display 0762  
                  _delay 0789                    _pulse 0798                    pclath 000A  
                  status 0003                    type@a 0072                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_type 0789  
                 ??_main 0075                   ??_type 0072                   ?_delay 0070  
                 ?_pulse 0070                   _ANSELH 0189                ??_address 0072  
                 delay@a 0070                   _string 07B1                ??_display 0072  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_delay 0798  
          __end_of_pulse 07B1               __end_of_on 077C                  ??_delay 0072  
                ??_pulse 0072               __pmaintext 07D0                  ?_string 0070  
             __stringtab 0003                  _address 0762                  __ptext1 077C  
                __ptext2 07B1                  __ptext3 0756                  __ptext4 076F  
                __ptext5 0762                  __ptext6 0798                  __ptext7 0789  
                _display 0756     end_of_initialization 07FC           __end_of_string 07D0  
    start_initialization 07FC                 ??_string 0073                ___latbits 0002  
               ?_address 0070                __pstrings 0003                 ?_display 0070  
            __stringbase 0008       __end_of__stringtab 0009                 address@a 0072  
               display@a 0072                string@ptr 0074                stringcode 0003  
               stringdir 0003                 stringtab 0003  
